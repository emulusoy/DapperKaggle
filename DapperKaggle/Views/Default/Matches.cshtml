@model List<ClubGameDto>
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string compId   = ViewBag.CompId as string ?? "TR1";
    var clubs       = ViewBag.Clubs as List<ResultClubsDto> ?? new();
    int? clubId     = ViewBag.ClubId as int?;
    string? result  = ViewBag.Result as string;
    string? hosting = ViewBag.Hosting as string;
    int page        = ViewBag.Page     is int ? (int)ViewBag.Page     : 1;
    int pageSize    = ViewBag.PageSize is int ? (int)ViewBag.PageSize : 20;
    int total       = ViewBag.Total    is int ? (int)ViewBag.Total    : Model.Count;
    int totalPages  = (int)Math.Ceiling(total / (double)pageSize);

    var compNames = new Dictionary<string,string> { ["TR1"]="Süper Lig", ["GB1"]="Premier League", ["ES1"]="La Liga" };
    var title = compNames.ContainsKey(compId) ? compNames[compId] : compId;

    string Pill(string r) => r switch {
        "W" => "bg-emerald-100 text-emerald-800 ring-1 ring-emerald-200",
        "D" => "bg-gray-100 text-gray-800 ring-1 ring-gray-200",
        _   => "bg-rose-100 text-rose-800 ring-1 ring-rose-200"
    };
    string HostPill(string? h) => (h ?? "").ToLower() switch {
        "home"    => "bg-indigo-100 text-indigo-800 ring-1 ring-indigo-200",
        "away"    => "bg-amber-100 text-amber-800 ring-1 ring-amber-200",
        "neutral" => "bg-slate-100 text-slate-800 ring-1 ring-slate-200",
        _         => "bg-slate-100 text-slate-800 ring-1 ring-slate-200"
    };
}

@section Head{
  <style>
    .filter-select{ background:#fff; color:#111827; }
    .filter-select option{ background:#fff; color:#111827; }
    .filter-select:focus{ outline:0; box-shadow:0 0 0 3px rgba(99,102,241,.35); }
  </style>
}

@section PageHeader{
  <div class="flex flex-col gap-3 py-6">
    <!-- Lig sekmeleri -->
    <div class="w-fit rounded-xl border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-900">
      @{
        var tabs = new[] {
          new { Id="TR1", Text="Türkiye" },
          new { Id="GB1", Text="İngiltere" },
          new { Id="ES1", Text="İspanya" }
        };
        foreach (var t in tabs)
        {
          var active = t.Id.Equals(compId, StringComparison.OrdinalIgnoreCase);
          <a href="@Url.Action("Matches","Default", new { compId = t.Id, clubId = (int?)null, result, hosting, page = 1, pageSize })"
             class="px-4 py-2 rounded-lg text-sm @(active ? "bg-indigo-600 text-white" : "text-gray-700 hover:bg-gray-50 dark:text-gray-300 dark:hover:bg-gray-800")">
            @t.Text
          </a>;
        }
      }
    </div>

    <!-- Filtreler -->
    <form method="get" action="@Url.Action("Matches","Default")"
          class="grid grid-cols-1 gap-2 sm:grid-cols-6">
      <input type="hidden" name="compId" value="@compId"/>

      <div class="sm:col-span-2">
        <select name="clubId" class="filter-select w-full rounded-xl border px-3 py-2 text-sm">
          <option value="">Tüm Kulüpler (@title)</option>
          @foreach (var c in clubs.OrderBy(x => x.name)) {  @* Gerekirse Name→name olarak değiştir *@
              <option value="@c.club_Id" @(clubId == (int?)c.club_Id ? "selected=\"selected\"" : "")>@c.name</option>
          }
        </select>
      </div>

      <div>
        <select name="result" class="filter-select w-full rounded-xl border px-3 py-2 text-sm">
          <option value="">Sonuç (Hepsi)</option>
          <option value="W" @(result=="W" ? "selected=\"selected\"" : "")>Galibiyet</option>
          <option value="D" @(result=="D" ? "selected=\"selected\"" : "")>Beraberlik</option>
          <option value="L" @(result=="L" ? "selected=\"selected\"" : "")>Mağlubiyet</option>
        </select>
      </div>

      <div>
        <select name="hosting" class="filter-select w-full rounded-xl border px-3 py-2 text-sm">
          <option value="">Saha (Hepsi)</option>
          <option value="home" @(hosting=="home" ? "selected=\"selected\"" : "")>İç Saha</option>
          <option value="away" @(hosting=="away" ? "selected=\"selected\"" : "")>Deplasman</option>
          <option value="neutral" @(hosting=="neutral" ? "selected=\"selected\"" : "")>Tarafsız</option>
        </select>
      </div>

      <div>
        <select name="pageSize" class="filter-select w-full rounded-xl border px-3 py-2 text-sm">
          @{ var sizes = new[]{10,20,50,100}; }
          @foreach (var s in sizes) {
              <option value="@s" @(s==pageSize ? "selected=\"selected\"" : "")>@s / sayfa</option>
          }
        </select>
      </div>

      <div>
        <button class="w-full rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-500">Uygula</button>
      </div>
    </form>
  </div>
}

<!-- KART LİSTESİ -->
<div class="space-y-3">
  @if (Model.Count == 0)
  {
    <div class="rounded-2xl border border-gray-200 bg-white p-6 text-center text-gray-500 dark:border-gray-800 dark:bg-gray-900">
      Kayıt bulunamadı.
    </div>
  }
  else
  {
    foreach (var m in Model)
    {
        var res = m.result ?? (m.own_goals > m.opponent_goals ? "W" : (m.own_goals == m.opponent_goals ? "D" : "L"));
        var own = (int)(m.own_goals ?? 0);
        var opp = (int)(m.opponent_goals ?? 0);
        var totalG = Math.Max(own + opp, 1);
        var leftPct  = (own  * 100.0) / totalG;
        var rightPct = (opp  * 100.0) / totalG;
        string hostText = string.IsNullOrWhiteSpace(m.hosting) ? "—" :
                          (m.hosting!.Equals("home", StringComparison.OrdinalIgnoreCase) ? "İç Saha" :
                           m.hosting!.Equals("away", StringComparison.OrdinalIgnoreCase) ? "Deplasman" :
                           m.hosting);

      <div class="rounded-2xl border border-gray-200 bg-white p-4 shadow-sm ring-1 ring-transparent transition
                  hover:shadow-md dark:border-gray-800 dark:bg-gray-900">
        <!-- Üst satır: Kulüp vs Rakip + rozetler -->
        <div class="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between">
          <div class="flex items-center gap-4">
            <!-- Kulüp -->
            <div class="flex items-center gap-2">
              <div class="flex h-10 w-10 items-center justify-center rounded-full bg-indigo-100 text-sm font-semibold text-indigo-700">
                @(string.IsNullOrEmpty(m.club_name) ? "?" : m.club_name![0])
              </div>
              <div class="truncate font-medium">@m.club_name</div>
            </div>

            <div class="text-gray-400">vs</div>

            <!-- Rakip -->
            <div class="flex items-center gap-2">
              <div class="flex h-10 w-10 items-center justify-center rounded-full bg-emerald-100 text-sm font-semibold text-emerald-700">
                @(string.IsNullOrEmpty(m.opponent_name) ? "?" : m.opponent_name![0])
              </div>
              <div class="truncate">@m.opponent_name</div>
            </div>
          </div>

          <div class="flex items-center gap-2">
            <span class="rounded-full px-2 py-1 text-xs @Pill(res)">@res</span>
            <span class="rounded-full px-2 py-1 text-xs @HostPill(m.hosting)">@hostText</span>
            <span class="text-xs text-gray-500">Maç ID: @m.game_id</span>
          </div>
        </div>

        <!-- Skor + mini bar -->
        <div class="mt-3 flex items-center gap-4">
          <div class="flex items-end gap-1">
            <span class="text-2xl font-semibold">@own</span>
            <span class="text-gray-400">–</span>
            <span class="text-2xl font-semibold">@opp</span>
          </div>

          <div class="flex-1">
            <div class="grid h-2 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-800"
                 style="grid-template-columns:@leftPct.ToString("0.#", System.Globalization.CultureInfo.InvariantCulture)% @rightPct.ToString("0.#", System.Globalization.CultureInfo.InvariantCulture)%;">
              <div class="h-2 bg-emerald-500"></div>
              <div class="h-2 bg-rose-500"></div>
            </div>
            <div class="mt-1 flex justify-between text-[10px] text-gray-500">
              <span>@m.club_name</span>
              <span>@m.opponent_name</span>
            </div>
          </div>
        </div>

        <!-- Alt satır: detaylar -->
        <div class="mt-3 grid grid-cols-1 gap-3 sm:grid-cols-3 text-sm">
          <div class="rounded-xl border border-gray-200 p-3 dark:border-gray-800">
            <div class="text-xs text-gray-500">Teknik Direktör (Ev)</div>
            <div class="font-medium">@(!string.IsNullOrWhiteSpace(m.own_manager_name) ? m.own_manager_name : "—")</div>
            <div class="mt-1 text-xs text-gray-500">Lig Sırası: <span class="font-medium text-gray-700 dark:text-gray-300">@((m.own_position?.ToString() ?? "—"))</span></div>
          </div>
          <div class="rounded-xl border border-gray-200 p-3 dark:border-gray-800">
            <div class="text-xs text-gray-500">Teknik Direktör (Rakip)</div>
            <div class="font-medium">@(!string.IsNullOrWhiteSpace(m.opponent_manager_name) ? m.opponent_manager_name : "—")</div>
            <div class="mt-1 text-xs text-gray-500">Lig Sırası: <span class="font-medium text-gray-700 dark:text-gray-300">@((m.opponent_position?.ToString() ?? "—"))</span></div>
          </div>
          <div class="rounded-xl border border-gray-200 p-3 dark:border-gray-800">
            <div class="text-xs text-gray-500">Saha / Sonuç</div>
            <div class="flex flex-wrap items-center gap-2">
              <span class="rounded-full px-2 py-1 text-xs @HostPill(m.hosting)">@hostText</span>
              <span class="rounded-full px-2 py-1 text-xs @Pill(res)">@res</span>
            </div>
          </div>
        </div>
      </div>
    }
  }
</div>

<!-- Pager -->
<div class="mt-4 flex items-center justify-between gap-3 text-sm">
  <div>Sayfa <span class="font-medium"></span> / @totalPages • Toplam @total</div>
  <div class="flex items-center gap-2">
    <a class="rounded-xl border px-3 py-1.5 hover:bg-gray-50 dark:border-gray-700 dark:hover:bg-gray-800 @(page <= 1 ? "pointer-events-none opacity-50" : "")"
       href="@Url.Action("Matches","Default", new { compId, clubId, result, hosting, page = page - 1, pageSize })">Önceki</a>

    <a class="rounded-xl border px-3 py-1.5 hover:bg-gray-50 dark:border-gray-700 dark:hover:bg-gray-800 @(page >= totalPages ? "pointer-events-none opacity-50" : "")"
       href="@Url.Action("Matches","Default", new { compId, clubId, result, hosting, page = page + 1, pageSize })">Sonraki</a>
  </div>
</div>
