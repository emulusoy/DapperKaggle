@model DashboardDto
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string compId = ViewBag.CompId as string ?? "TR1";
    long? clubId = ViewBag.ClubId as long?;
    string CompText(string id) => id switch { "TR1" => "Süper Lig", "GB1" => "Premier League", "ES1" => "La Liga", _ => id };
}

@section Head {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .selector {
            background: #fff;
            color: #111827;
        }

            .selector option {
                background: #fff;
                color: #111827;
            }

            .selector:focus {
                outline: 0;
                box-shadow: 0 0 0 3px rgba(99,102,241,.35);
            }
    </style>
}

@section PageHeader {
    <div class="flex flex-col gap-4 py-6 sm:flex-row sm:items-end sm:justify-between">
        <div>
            <h1 class="text-xl font-semibold">Dashboard – @CompText(compId)</h1>
            <p class="text-sm text-gray-500 dark:text-gray-400">Lig verileri, grafikleri ve kulüp kırılımları</p>
        </div>

        <form method="get" action="@Url.Action("Dashboard","Default")" class="flex items-center gap-2">
            <select name="compId" class="selector rounded-xl border px-3 py-2 text-sm">
                <option value="TR1" @(compId == "TR1" ? "selected" : "")>Türkiye (TR1)</option>
                <option value="GB1" @(compId == "GB1" ? "selected" : "")>İngiltere (GB1)</option>
                <option value="ES1" @(compId == "ES1" ? "selected" : "")>İspanya (ES1)</option>
            </select>

            <select name="clubId" class="selector rounded-xl border px-3 py-2 text-sm">
                <option value="">Kulüp (opsiyonel)</option>
                @foreach (var c in Model.clubs)
                {
                    <option value="@c.club_id" @(clubId == c.club_id ? "selected" : "")>@c.name</option>
                }
            </select>

            <button class="rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-500">
                Uygula
            </button>
        </form>
    </div>
}

<div class="grid grid-cols-2 gap-3 md:grid-cols-4">
    <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
        <div class="text-xs text-gray-500">Toplam Oyuncu</div>
        <div class="mt-1 text-2xl font-semibold">@Model.total_players.ToString("N0")</div>
    </div>
    <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
        <div class="text-xs text-gray-500">Kulüp Sayısı</div>
        <div class="mt-1 text-2xl font-semibold">@Model.total_clubs.ToString("N0")</div>
    </div>
    <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
        <div class="text-xs text-gray-500">Toplam Piyasa Değeri</div>
        <div class="mt-1 text-2xl font-semibold">@Model.total_market_value.ToString("N0") €</div>
    </div>
    <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
        <div class="text-xs text-gray-500">Ortalama Yaş</div>
        <div class="mt-1 text-2xl font-semibold">@Model.avg_age.ToString("0.0")</div>
    </div>
</div>

<!-- Grafikler + Kulüp paneli -->
<div class="mt-6 grid grid-cols-1 gap-6 xl:grid-cols-3">
    <!-- Sol sütun (geniş) -->
    <div class="xl:col-span-2 space-y-6">
        <!-- En Değerli Oyuncular -->
        <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
            <div class="mb-2 text-sm font-medium">En Değerli Oyuncular (Top 10)</div>
            <canvas id="chartTopPlayers" height="120"></canvas>
        </div>

        <!-- Milli Oyuncu Sayısı – Top 10 Kulüp (yeni) -->
        <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
            <div class="mb-2 text-sm font-medium">Milli Oyuncu Sayısı – Top 10 Kulüp</div>
            <canvas id="chartNatTop" height="120"></canvas>
        </div>

        <!-- Yaş Dağılımı -->
        <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
            <div class="mb-2 text-sm font-medium">Yaş Dağılımı</div>
            <canvas id="chartAges" height="100"></canvas>
        </div>
    </div>

    <!-- Sağ panel -->
    <div class="space-y-6">
        <!-- Pozisyona Göre Oyuncu Dağılımı (yeni) -->
        <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
            <div class="mb-2 text-sm font-medium">Pozisyona Göre Oyuncu Dağılımı</div>
            <canvas id="chartPos" height="220"></canvas>
        </div>

        <!-- Seçilen Kulüp – En Değerli 5 Oyuncu -->
        <div class="rounded-2xl border border-gray-200 bg-white p-4 dark:border-gray-800 dark:bg-gray-900">
            <div class="mb-2 flex items-center justify-between">
                <div class="text-sm font-medium">Seçilen Kulüp – En Değerli 5 Oyuncu</div>
                @if (Model.club_top_players.Count == 0)
                {
                    <span class="text-xs text-gray-500">Kulüp seçin</span>
                    ;
                }
            </div>
            <ul class="space-y-3">
                @if (Model.club_top_players.Count == 0)
                {
                    <li class="text-sm text-gray-500">—</li>
                }
                else
                {
                    foreach (var p in Model.club_top_players)
                    {
                        <li class="flex items-center gap-3">
                            <img src="@(string.IsNullOrWhiteSpace(p.image_url) ? "https://placehold.co/40x40" : p.image_url)"
                                 class="h-10 w-10 rounded-full object-cover" />
                            <div class="min-w-0 flex-1">
                                <div class="truncate text-sm font-medium">@p.name</div>
                                <div class="text-xs text-gray-500">@p.position</div>
                            </div>
                            <div class="text-sm font-semibold">@((p.market_value_in_eur ?? 0).ToString("N0")) €</div>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Sunucudan veriler
        const TP = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.top_players));
        const AB = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.age_buckets));
        const CN = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.club_nat_players_top)); // Milli oyuncu – Top 10
        const PC = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.position_counts));      // Pozisyon dağılımı

        // Basit chart helper'lar
        function makeBar(id, labels, data, horizontal){
          const ctx = document.getElementById(id);
          return new Chart(ctx, {
            type: 'bar',
            data: { labels, datasets: [{ data }] },
            options: {
              indexAxis: horizontal ? 'y' : 'x',
              responsive: true,
              plugins: { legend: { display:false }, tooltip: { enabled:true } },
              scales: { y: { beginAtZero:true } }
            }
          });
        }
        function makeDonut(id, data, labels){
          const ctx = document.getElementById(id);
          return new Chart(ctx, {
            type: 'doughnut',
            data: { labels, datasets: [{ data }] },
            options: { plugins: { legend: { position:'bottom' } }, cutout:'60%' }
          });
        }

        // 1) En Değerli Oyuncular
        (function(){
          const labels = TP.map(x => (x.name || '—') + (x.current_club_name ? ` (${x.current_club_name})` : ''));
          const data   = TP.map(x => x.market_value_in_eur || 0);
          makeBar('chartTopPlayers', labels, data, false);
        })();

        // 2) Milli Oyuncu Sayısı – Top 10 Kulüp (yatay bar)
        (function(){
          const labels = CN.map(x => x.name);
          const data   = CN.map(x => x.national_team_players);
          makeBar('chartNatTop', labels, data, true);
        })();

        // 3) Yaş Dağılımı
        (function(){
          const labels = AB.map(x => x.bucket);
          const data   = AB.map(x => x.count);
          makeBar('chartAges', labels, data, false);
        })();

        // 4) Pozisyona Göre Oyuncu Dağılımı (donut)
        (function(){
          const labels = PC.map(x => x.label);
          const data   = PC.map(x => x.count);
          makeDonut('chartPos', data, labels);
        })();
    </script>
}
