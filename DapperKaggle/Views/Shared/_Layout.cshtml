@* Views/Shared/_Layout.cshtml *@
@{
    var currentController = (string?)ViewContext.RouteData.Values["controller"] ?? "";
    var currentAction = (string?)ViewContext.RouteData.Values["action"] ?? "";
    Func<string, string?, string> NavCls = (controller, action) =>
        (currentController.Equals(controller, StringComparison.OrdinalIgnoreCase) &&
         (action == null || currentAction.Equals(action, StringComparison.OrdinalIgnoreCase)))
        ? "text-indigo-600 dark:text-indigo-400 font-semibold"
        : "text-gray-700 hover:text-gray-900 dark:text-gray-300 hover:dark:text-white";
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr" class="h-full">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - Admin</title>

    <!-- Tailwind (CDN). Prod’da derlenmiş CSS tercih edilir. -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
          darkMode: 'class',
          theme: {
            extend: {
              colors: { brand: { DEFAULT: '#6366F1' } }
            }
          }
        }
    </script>

    <style>
        /* İnce dokunuşlar */
        .btn { @* basit utility *@ }
    </style>

    @RenderSection("Head", required: false)

    <script>
        // Dark mode tercihlerini hatırla
        (function () {
          const user = localStorage.getItem('theme');
          const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          if (user === 'dark' || (!user && systemDark)) document.documentElement.classList.add('dark');
        })();
    </script>
</head>
<body class="h-full bg-gray-50 text-gray-900 dark:bg-gray-950 dark:text-gray-100">
    <!-- Top Nav -->
    <header class="sticky top-0 z-50 border-b border-gray-200/70 bg-white/80 backdrop-blur dark:border-gray-800/70 dark:bg-gray-900/80">
        <div class="mx-auto max-w-7xl px-4">
            <div class="flex h-16 items-center justify-between">
                <!-- Brand -->
                <div class="flex items-center gap-3">
                    <a href="@Url.Action("Index","Home")" class="flex items-center gap-2">
                        <span class="inline-flex h-9 w-9 items-center justify-center rounded-xl bg-indigo-600 text-white font-bold">EMU</span>                     
                    </a>
                </div>

                <!-- Desktop Nav -->
                <nav class="hidden md:flex items-center gap-6">
                    <a href="@Url.Action("Dashboard","Default")"
                       class="@NavCls("Default","Dashboard")">Dashboard</a>

                    <a href="@Url.Action("Clubs","Default")"
                       class="@NavCls("Default","Clubs")">Clubs</a>

                    <a href="@Url.Action("Players","Default")"
                       class="@NavCls("Default","Players")">Players</a>

                    <a href="@Url.Action("Matches","Default")"
                       class="@NavCls("Default","Matches")">Matches</a>
                </nav>

                <!-- Right actions -->
                <div class="flex items-center gap-3">
                    <!-- Search -->
                    <form action="@Url.Action("Search","Home")" method="get" class="hidden sm:block">
                        <div class="relative">
                            <input name="q" placeholder="Ara…" class="w-60 rounded-xl border border-gray-300 bg-white px-3 py-2 text-sm outline-none transition
                       placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 dark:border-gray-700 dark:bg-gray-800" />
                            <span class="pointer-events-none absolute right-2 top-1/2 -translate-y-1/2 text-xs text-gray-400">⌘K</span>
                        </div>
                    </form>

                    <!-- Dark toggle -->
                    <button id="themeToggle" type="button" class="rounded-xl border border-gray-300 bg-white p-2 text-gray-700
                    hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-200">
                        <svg id="iconSun" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:inline" viewBox="0 0 24 24" fill="currentColor"><path d="M6.76 4.84l-1.8-1.79L3.17 4.84l1.79 1.79 1.8-1.79zm10.48 0l1.8-1.79 1.79 1.79-1.79 1.79-1.8-1.79zM12 4V1h-0v3h0zm0 19v-3h0v3h0zM4 13H1v-2h3v2zm19 0h-3v-2h3v2zM6.76 19.16l-1.8 1.79-1.79-1.79 1.79-1.79 1.8 1.79zM19.24 19.16l1.8 1.79 1.79-1.79-1.79-1.79-1.8 1.79zM12 8a4 4 0 100 8 4 4 0 000-8z" /></svg>
                        <svg id="iconMoon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 dark:hidden" viewBox="0 0 24 24" fill="currentColor"><path d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z" /></svg>
                    </button>

                    <!-- Profile -->
                    <div class="relative">
                        <button id="avatarBtn" class="flex items-center gap-2 rounded-full border border-gray-300 bg-white p-1 pr-3
                     hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800">
                            <img class="h-8 w-8 rounded-full" src="https://i.pravatar.cc/80?img=3" alt="avatar" />
                            <span class="hidden sm:inline text-sm">Mustafa</span>
                        </button>
                        <div id="avatarMenu" class="absolute right-0 mt-2 hidden w-48 overflow-hidden rounded-xl border border-gray-200 bg-white shadow-lg
                   dark:border-gray-700 dark:bg-gray-800">
                            <a href="@Url.Action("Profile","Account")" class="block px-4 py-2 text-sm hover:bg-gray-50 dark:hover:bg-gray-700">Profil</a>
                            <a href="@Url.Action("Settings","Account")" class="block px-4 py-2 text-sm hover:bg-gray-50 dark:hover:bg-gray-700">Ayarlar</a>
                            <a href="@Url.Action("Logout","Account")" class="block px-4 py-2 text-sm text-red-600 hover:bg-red-50 dark:hover:bg-gray-700">Çıkış</a>
                        </div>
                    </div>

                    <!-- Mobile menu button -->
                    <button id="mobileBtn" class="md:hidden rounded-xl border border-gray-300 bg-white p-2
                    hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="currentColor"><path d="M4 6h16M4 12h16M4 18h16" /></svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Mobile Nav -->
        <div id="mobileMenu" class="md:hidden hidden border-t border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-900">
            <nav class="mx-auto max-w-7xl px-4 py-3 space-y-1">
                <a href="@Url.Action("Index","Home")" class="block px-2 py-2 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 @NavCls("Home","Index")">Dashboard</a>
                <a href="@Url.Action("Index","Players")" class="block px-2 py-2 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 @NavCls("Players","Index")">Players</a>
                <a href="@Url.Action("Index","Reports")" class="block px-2 py-2 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 @NavCls("Reports","Index")">Reports</a>
            </nav>
        </div>
    </header>

    <!-- Page container -->
    <div class="mx-auto max-w-7xl px-4">
        <!-- Page header (opsiyonel) -->
        @RenderSection("PageHeader", required: false)

        <!-- Main content -->
        <main class="py-6">
            @RenderBody()
        </main>
    </div>

    <footer class="border-t border-gray-200 py-6 text-center text-sm text-gray-500 dark:border-gray-800">
        © @DateTime.Now.Year Admin Panel
    </footer>

    @RenderSection("Scripts", required: false)

    <script>
        // Theme toggle
        document.getElementById('themeToggle')?.addEventListener('click', () => {
          const html = document.documentElement;
          const isDark = html.classList.toggle('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });

        // Mobile menu
        const mobileBtn  = document.getElementById('mobileBtn');
        const mobileMenu = document.getElementById('mobileMenu');
        mobileBtn?.addEventListener('click', () => mobileMenu?.classList.toggle('hidden'));

        // Avatar dropdown
        const avatarBtn  = document.getElementById('avatarBtn');
        const avatarMenu = document.getElementById('avatarMenu');
        avatarBtn?.addEventListener('click', () => avatarMenu?.classList.toggle('hidden'));
        document.addEventListener('click', (e) => {
          if (!avatarBtn?.contains(e.target) && !avatarMenu?.contains(e.target)) avatarMenu?.classList.add('hidden');
        });
    </script>
</body>
</html>
